{"code":"(this.webpackJsonpmyAppInAppBrowser=this.webpackJsonpmyAppInAppBrowser||[]).push([[0],{32:function(o,n,e){},34:function(o,n,e){\"use strict\";e.r(n);var t=e(8),r=e.n(t),i=e(15),a=e.n(i),c=(e(22),e(23),e(24),e(25),e(26),e(27),e(28),e(29),e(30),e(31),e(32),e(17).a.create(\"https://localhost:8084/jw\",\"_self\",{zoom:\"no\",location:\"no\",toolbar:\"no\",hidden:\"yes\",hideurlbar:\"yes\",toolbarposition:\"bottom\"}));null===c||void 0===c||c.on(\"loadstop\").subscribe((function(o){c.insertCSS({code:\"body{color: red; padding: 10mm;\"}),console.log(\"loadstop DONE!\")}));var s=App;Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var l=function(o){o&&o instanceof Function&&e.e(3).then(e.bind(null,36)).then((function(n){var e=n.getCLS,t=n.getFID,r=n.getFCP,i=n.getLCP,a=n.getTTFB;e(o),t(o),r(o),i(o),a(o)}))},d=e(12);a.a.render(Object(d.jsx)(r.a.StrictMode,{children:Object(d.jsx)(s,{})}),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then((function(o){o.unregister()})).catch((function(o){console.error(o.message)})),l()}},[[34,1,2]]]);","name":"static/js/main.78b5e9a6.chunk.js","map":{"version":3,"sources":["static/js/main.78b5e9a6.chunk.js"],"names":["this","push","32","module","exports","__webpack_require__","34","__webpack_exports__","r","react","react_default","n","react_dom","react_dom_default","browser","create","zoom","location","toolbar","hidden","hideurlbar","toolbarposition","on","subscribe","event","insertCSS","code","console","log","src_App","Boolean","window","hostname","match","src_reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","jsx_runtime","a","render","Object","StrictMode","children","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"CAACA,KAAoC,8BAAIA,KAAoC,+BAAK,IAAIC,KAAK,CAAC,CAAC,GAAG,CAE1FC,GACA,SAAUC,EAAQC,EAASC,KAM3BC,GACA,SAAUH,EAAQI,EAAqBF,GAE7C,aAEAA,EAAoBG,EAAED,GAGtB,IAAIE,EAAQJ,EAAoB,GAC5BK,EAA6BL,EAAoBM,EAAEF,GAGnDG,EAAYP,EAAoB,IAChCQ,EAAiCR,EAAoBM,EAAEC,GAuC2QE,GApC3TT,EAAoB,IAGfA,EAAoB,IAGpBA,EAAoB,IAGnBA,EAAoB,IAGvBA,EAAoB,IAGbA,EAAoB,IAGpBA,EAAoB,IAGfA,EAAoB,IAG7BA,EAAoB,IAGvBA,EAAoB,IAGlBA,EAAoB,IAGfA,EAAoB,IAG0U,EAAEU,OAAzL,4BAA2M,QAAnK,CAACC,KAAK,KAAKC,SAAS,KAAKC,QAAQ,KAAKC,OAAO,MAAMC,WAAW,MAAMC,gBAAgB,YAA0G,OAAVP,QAA0B,IAAVA,GAAwBA,EAAQQ,GAAG,YAAYC,WAAU,SAASC,GAAOV,EAAQW,UAAU,CAACC,KAAK,oCAAoCC,QAAQC,IAAI,qBAAkD,IAAIC,EAAU,IAWzmBC,QAAmC,cAA3BC,OAAOd,SAASe,UACb,UAA3BD,OAAOd,SAASe,UAChBD,OAAOd,SAASe,SAASC,MAAM,2DAsB/B,IAAicC,EAA7a,SAAyBC,GAAgBA,GAAaA,aAAuBC,UAAU/B,EAAoBgC,EAAiB,GAAGC,KAAKjC,EAAoBkC,KAAK,KAAM,KAAKD,MAAK,SAASE,GAAM,IAAIC,EAAOD,EAAKC,OAAOC,EAAOF,EAAKE,OAAOC,EAAOH,EAAKG,OAAOC,EAAOJ,EAAKI,OAAOC,EAAQL,EAAKK,QAAQJ,EAAON,GAAaO,EAAOP,GAAaQ,EAAOR,GAAaS,EAAOT,GAAaU,EAAQV,OAEzYW,EAAczC,EAAoB,IAGtCQ,EAAkBkC,EAAEC,OAAoBC,OAAOH,EAAiB,IAAxBG,CAA2BvC,EAAcqC,EAAEG,WAAW,CAACC,SAAsBF,OAAOH,EAAiB,IAAxBG,CAA2BpB,EAAQ,MAAMuB,SAASC,eAAe,SAPzB,kBAAkBC,WAAWA,UAAUC,cAAcC,MAAMlB,MAAK,SAASmB,GAAcA,EAAaC,gBAAgBC,OAAM,SAASC,GAAOjC,QAAQiC,MAAMA,EAAMC,YAa3T3B,MAIE,CAAC,CAAC,GAAG,EAAE"},"input":"(this[\"webpackJsonpmyAppInAppBrowser\"] = this[\"webpackJsonpmyAppInAppBrowser\"] || []).push([[0],{\n\n/***/ 32:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(8);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(15);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/core.css\nvar core = __webpack_require__(22);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/normalize.css\nvar normalize = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/structure.css\nvar structure = __webpack_require__(24);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/typography.css\nvar typography = __webpack_require__(25);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/padding.css\nvar padding = __webpack_require__(26);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/float-elements.css\nvar float_elements = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/text-alignment.css\nvar text_alignment = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/text-transformation.css\nvar text_transformation = __webpack_require__(29);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/flex-utils.css\nvar flex_utils = __webpack_require__(30);\n\n// EXTERNAL MODULE: ./node_modules/@ionic/react/css/display.css\nvar display = __webpack_require__(31);\n\n// EXTERNAL MODULE: ./src/theme/variables.css\nvar variables = __webpack_require__(32);\n\n// EXTERNAL MODULE: ./node_modules/@ionic-native/in-app-browser/index.js + 9 modules\nvar in_app_browser = __webpack_require__(17);\n\n// CONCATENATED MODULE: ./src/App.tsx\n/* Core CSS required for Ionic components to work properly *//* Basic CSS for apps built with Ionic *//* Optional CSS utils that can be commented out *//* Theme variables */var websiteUrl=\"https://localhost:8084/jw\";var options={zoom:'no',location:'no',toolbar:'no',hidden:'yes',hideurlbar:'yes',toolbarposition:'bottom'};var browser=in_app_browser[\"a\" /* InAppBrowser */].create(websiteUrl,'_self',options);browser===null||browser===void 0?void 0:browser.on('loadstop').subscribe(function(event){browser.insertCSS({code:\"body{color: red; padding: 10mm;\"});console.log('loadstop DONE!');});/* harmony default export */ var src_App = (App);\n// CONCATENATED MODULE: ./src/serviceWorkerRegistration.ts\n// This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\nvar isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] is the IPv6 localhost address.\nwindow.location.hostname==='[::1]'||// 127.0.0.0/8 are considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function register(config){if( true&&'serviceWorker'in navigator){// The URL constructor is available in all browsers that support SW.\nvar publicUrl=new URL(\"\",window.location.href);if(publicUrl.origin!==window.location.origin){// Our service worker won't work if PUBLIC_URL is on a different origin\n// from what our page is served on. This might happen if a CDN is used to\n// serve assets; see https://github.com/facebook/create-react-app/issues/2374\nreturn;}window.addEventListener('load',function(){var swUrl=\"\".concat(\"\",\"/service-worker.js\");if(isLocalhost){// This is running on localhost. Let's check if a service worker still exists or not.\ncheckValidServiceWorker(swUrl,config);// Add some additional logging to localhost, pointing developers to the\n// service worker/PWA documentation.\nnavigator.serviceWorker.ready.then(function(){console.log('This web app is being served cache-first by a service '+'worker. To learn more, visit https://cra.link/PWA');});}else{// Is not localhost. Just register service worker\nregisterValidSW(swUrl,config);}});}}function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(function(registration){registration.onupdatefound=function(){var installingWorker=registration.installing;if(installingWorker==null){return;}installingWorker.onstatechange=function(){if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){// At this point, the updated precached content has been fetched,\n// but the previous service worker will still serve the older\n// content until all client tabs are closed.\nconsole.log('New content is available and will be used when all '+'tabs for this page are closed. See https://cra.link/PWA.');// Execute callback\nif(config&&config.onUpdate){config.onUpdate(registration);}}else{// At this point, everything has been precached.\n// It's the perfect time to display a\n// \"Content is cached for offline use.\" message.\nconsole.log('Content is cached for offline use.');// Execute callback\nif(config&&config.onSuccess){config.onSuccess(registration);}}}};};}).catch(function(error){console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl,config){// Check if the service worker can be found. If it can't reload the page.\nfetch(swUrl,{headers:{'Service-Worker':'script'}}).then(function(response){// Ensure service worker exists, and that we really are getting a JS file.\nvar contentType=response.headers.get('content-type');if(response.status===404||contentType!=null&&contentType.indexOf('javascript')===-1){// No service worker found. Probably a different app. Reload the page.\nnavigator.serviceWorker.ready.then(function(registration){registration.unregister().then(function(){window.location.reload();});});}else{// Service worker found. Proceed as normal.\nregisterValidSW(swUrl,config);}}).catch(function(){console.log('No internet connection found. App is running in offline mode.');});}function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(function(registration){registration.unregister();}).catch(function(error){console.error(error.message);});}}\n// CONCATENATED MODULE: ./src/reportWebVitals.ts\nvar reportWebVitals=function reportWebVitals(onPerfEntry){if(onPerfEntry&&onPerfEntry instanceof Function){__webpack_require__.e(/* import() */ 3).then(__webpack_require__.bind(null, 36)).then(function(_ref){var getCLS=_ref.getCLS,getFID=_ref.getFID,getFCP=_ref.getFCP,getLCP=_ref.getLCP,getTTFB=_ref.getTTFB;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);});}};/* harmony default export */ var src_reportWebVitals = (reportWebVitals);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/index.tsx\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_default.a.StrictMode,{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_App,{})}),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nunregister();// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nsrc_reportWebVitals();\n\n/***/ })\n\n},[[34,1,2]]]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\tom\\myAppInAppBrowser\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-4-0!C:\\Users\\tom\\myAppInAppBrowser\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-4-1!C:\\Users\\tom\\myAppInAppBrowser\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\tom\\myAppInAppBrowser\\src\\theme\\variables.css","C:/Users/tom/myAppInAppBrowser/src/App.tsx","C:/Users/tom/myAppInAppBrowser/src/serviceWorkerRegistration.ts","C:/Users/tom/myAppInAppBrowser/src/reportWebVitals.ts","C:/Users/tom/myAppInAppBrowser/src/index.tsx"],"names":["websiteUrl","options","zoom","location","toolbar","hidden","hideurlbar","toolbarposition","browser","InAppBrowser","create","on","subscribe","event","insertCSS","code","console","log","App","isLocalhost","Boolean","window","hostname","match","register","config","process","navigator","publicUrl","URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","serviceWorkerRegistration"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport { InAppBrowser, InAppBrowserOptions } from \"@ionic-native/in-app-browser\";\n\nconst websiteUrl: string = \"https://localhost:8084/jw\"\n\nconst options: InAppBrowserOptions = {\n  zoom: 'no',\n  location: 'no',\n  toolbar: 'no',\n  hidden: 'yes',\n  hideurlbar: 'yes',\n  toolbarposition: 'bottom'\n}\n\nconst browser = InAppBrowser.create(websiteUrl, '_self', options)\n\n\nbrowser?.on('loadstop').subscribe(event => {\n  browser.insertCSS({ code: \"body{color: red; padding: 10mm;\" });\n  console.log('loadstop DONE!')\n});\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]}}